bind = import("bind")
log = import("log")
world = import("world")
packets = import("packets")
load("scripts/lib/packets.ank")

// TODO: RSC 235 does away with this--rather than the client asking for tickets, the server just does bookkeeping to notify others
// as needed, which is a slightly more involved solution for the server, but ultimately is probably a better and simpler solution
bind.packet(packets.ticketRequests, func(player, packet) {
	if !checkPacket(packet, 2) {
		return
	}
	count = packet.ReadUint16()
	if !checkPacket(packet, 2+count*4) {
		return
	}
	for i = 0; i < count; i++ {
		serverIdx = packet.ReadUint16()
		appearanceTicket = packet.ReadUint16()
		player.Enqueue("playerEventQ", {"idx": serverIdx, "ticket": appearanceTicket})
		// log.debugf("%v wants info about players[%d](info update #%d); scheduling to send data...\n", player, serverIdx, appearanceTicket)
	}
})
