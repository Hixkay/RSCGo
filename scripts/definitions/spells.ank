/**
 * Notes:
 * dmg is -1 for any non-missile spells, incl. curses and etc.
 * Spell Definition kinds:
  * 0 cast on Self = teleporting, charing godmage, bones to bananas, etc
  * 2 cast on mobTarget = missile spells and curse spells, if no dmg defined must be curse
  * 3 cast on Enchant jewelery = crafting related, telegrab, low/high alch and superheat??
  * 5 cast on Enchant orbs = any of the orb related spells I think.
 * maybe add optional handler func to the actual defs?  Probably not? idk.
**/

defs = [
	{
		"level": 1,
		"kind":  2,
		"runes": {
			33: 1,
			35: 1,
		},
		"dmg": 1,
	},
	{
		"level": 3,
		"kind":  2,
		"runes": {
			32: 3,
			34: 2,
			36: 1,
		},
		"dmg": -1,
	},
	{
		"level": 5,
		"kind":  2,
		"runes": {
			32: 1,
			33: 1,
			35: 1,
		},
		"dmg": 2,
	},
	{
		"level": 7,
		"kind":  3,
		"runes": {
			32: 1,
			46: 1,
		},
		"dmg": -1,
	},
	{
		"level": 9,
		"kind":  2,
		"runes": {
			34: 2,
			33: 1,
			35: 1,
		},
		"dmg": 3,
	},
	{
		"level": 11,
		"kind":  2,
		"runes": {
			32: 3,
			34: 2,
			36: 1,
		},
		"dmg": -1,
	},
	{
		"level": 13,
		"kind":  2,
		"runes": {
			31: 3,
			33: 2,
			35: 1,
		},
		"dmg": 4,
	},
	{
		"level": 15,
		"kind":  0,
		"runes": {
			34: 2,
			32: 2,
			40: 1,
		},
		"dmg": -1,
	},
	{
		"level": 17,
		"kind":  2,
		"runes": {
			33: 2,
			41: 1,
		},
		"dmg": 5,
	},
	{
		"level": 19,
		"kind":  2,
		"runes": {
			32: 2,
			34: 3,
			36: 1,
		},
		"dmg": -1,
	},
	{
		"level": 21,
		"kind":  3,
		"runes": {
			31: 3,
			40: 1,
		},
		"dmg": -1,
	},
	{
		"level": 23,
		"kind":  2,
		"runes": {
			32: 2,
			33: 2,
			41: 1,
		},
		"dmg": 6,
	},
	{
		"level": 25,
		"kind":  0,
		"runes": {
			31: 1,
			33: 3,
			42: 1,
		},
		"dmg": -1,
	},
	{
		"level": 27,
		"kind":  3,
		"runes": {
			33: 3,
			46: 1,
		},
		"dmg": -1,
	},
	{
		"level": 29,
		"kind":  2,
		"runes": {
			34: 3,
			33: 2,
			41: 1,
		},
		"dmg": 7,
	},
	{
		"level": 31,
		"kind":  0,
		"runes": {
			34: 1,
			33: 3,
			42: 1,
		},
		"dmg": -1,
	},
	{
		"level": 33,
		"kind":  3,
		"runes": {
			33: 1,
			42: 1,
		},
		"dmg": -1,
	},
	{
		"level": 35,
		"kind":  2,
		"runes": {
			31: 4,
			33: 3,
			41: 1,
		},
		"dmg": 8,
	},
	{
		"level": 37,
		"kind":  0,
		"runes": {
			32: 1,
			33: 3,
			42: 1,
		},
		"dmg": -1,
	},
	{
		"level": 39,
		"kind":  2,
		"runes": {
			34: 2,
			33: 2,
			41: 1,
		},
		"dmg": -1,
	},
	{
		"level": 41,
		"kind":  2,
		"runes": {
			33: 3,
			38: 1,
		},
		"dmg": 9,
	},
	{
		"level": 43,
		"kind":  3,
		"runes": {
			31: 4,
			40: 1,
		},
		"dmg": -1,
	},
	{
		"level": 45,
		"kind":  0,
		"runes": {
			33: 5,
			42: 1,
		},
		"dmg": -1,
	},
	{
		"level": 47,
		"kind":  2,
		"runes": {
			32: 3,
			33: 3,
			38: 1,
		},
		"dmg": 10,
	},
	{
		"level": 49,
		"kind":  3,
		"runes": {
			31: 5,
			46: 1,
		},
		"dmg": -1,
	},
	{
		"level": 50,
		"kind":  2,
		"runes": {
			31: 5,
			38: 1,
		},
		"dmg": -1,
	},
	{
		"level": 51,
		"kind":  0,
		"runes": {
			32: 2,
			42: 2,
		},
		"dmg": -1,
	},
	{
		"level": 53,
		"kind":  2,
		"runes": {
			34: 4,
			33: 3,
			38: 1,
		},
		"dmg": 11,
	},
	{
		"level": 55,
		"kind":  3,
		"runes": {
			31: 5,
			40: 1,
		},
		"dmg": -1,
	},
	{
		"level": 56,
		"kind":  5,
		"runes": {
			32:  30,
			46:  3,
			611: 1,
		},
		"dmg": -1,
	},
	{
		"level": 57,
		"kind":  3,
		"runes": {
			34: 10,
			46: 1,
		},
		"dmg": -1,
	},
	{
		"level": 58,
		"kind":  0,
		"runes": {
			34: 2,
			42: 2,
		},
		"dmg": -1,
	},
	{
		"level": 59,
		"kind":  2,
		"runes": {
			31: 5,
			33: 4,
			38: 1,
		},
		"dmg": 12,
	},
	{
		"level": 60,
		"kind":  2,
		"runes": {
			31:  1,
			33:  4,
			619: 2,
		},
		"dmg": -1,
	},
	{
		"level": 60,
		"kind":  2,
		"runes": {
			31:  2,
			33:  4,
			619: 2,
		},
		"dmg": -1,
	},
	{
		"level": 60,
		"kind":  2,
		"runes": {
			31:  4,
			33:  1,
			619: 2,
		},
		"dmg": -1,
	},
	{
		"level": 60,
		"kind":  5,
		"runes": {
			34:  30,
			46:  3,
			611: 1,
		},
		"dmg": -1,
	},
	{
		"level": 62,
		"kind":  2,
		"runes": {
			33:  5,
			619: 1,
		},
		"dmg": 13,
	},
	{
		"level": 63,
		"kind":  5,
		"runes": {
			31:  30,
			46:  3,
			611: 1,
		},
		"dmg": -1,
	},
	{
		"level": 65,
		"kind":  2,
		"runes": {
			32:  7,
			33:  5,
			619: 1,
		},
		"dmg": 14,
	},
	{
		"level": 66,
		"kind":  5,
		"runes": {
			33:  30,
			46:  3,
			611: 1,
		},
		"dmg": -1,
	},
	{
		"level": 66,
		"kind":  2,
		"runes": {
			34:  5,
			32:  5,
			825: 1,
		},
		"dmg": -1,
	},
	{
		"level": 68,
		"kind":  3,
		"runes": {
			32: 15,
			34: 15,
			46: 1,
		},
		"dmg": -1,
	},
	{
		"level": 70,
		"kind":  2,
		"runes": {
			34:  7,
			33:  5,
			619: 1,
		},
		"dmg": 15,
	},
	{
		"level": 73,
		"kind":  2,
		"runes": {
			34:  8,
			32:  8,
			825: 1,
		},
		"dmg": -1,
	},
	{
		"level": 75,
		"kind":  2,
		"runes": {
			31:  7,
			33:  5,
			619: 1,
		},
		"dmg": 16,
	},
	{
		"level": 80,
		"kind":  2,
		"runes": {
			34:  12,
			32:  12,
			825: 1,
		},
		"dmg": -1,
	},
	{
		"level": 80,
		"kind":  0,
		"runes": {
			31:  3,
			33:  3,
			619: 3,
		},
		"dmg": -1,
	},
]

func makeTeleport(x, y) {
	return func(player, spell) {
	    if !spellCast(defs[spell.idx], player) {
	        return
	    }
	    world.teleport(player, x, y, true)
	}
}

teleports = {
	// Varrock teleport
	12: makeTeleport(120, 504),
	// Lumbridge teleport
	15: makeTeleport(120, 648),
	// Falador teleport
	18: makeTeleport(312, 552),
	// Camelot teleport
	22: makeTeleport(465, 456),
	// Ardougne teleport
    26: func(player, spell) {
        if !spellCast(defs[spell.idx], player) {
            return
        }
        // world.teleport(player, 588, 621, true)
        player.Message("You don't know how to cast this spell yet")
        player.Message("You need to do the plague city quest")
    },
    // Watchtower teleport
    31: func(player, spell) {
        if !spellCast(defs[spell.idx], player) {
            return
        }
        // world.teleport(player, 493, 3525, true)
        player.Message("You cannot cast this spell")
        player.Message("You need to finish the watchtower quest first")
    },
}

func spellCast(s, player) {
	if spellFail(player, s) || checkAndRemoveRunes(player, s) {
		return false
	}
	spellFinalize(player)
	return true
}

func spellFinalize(player) {
	player.Transients().SetVar("lastSpell", tNow)
	player.PlaySound("spellok")
	player.Message("Cast spell successfully")
	player.ResetPath()
}

func spellFail(player, s) {
	lvDelta = player.Skills().Current(MAGIC) - s.level
	if lvDelta < 0 {
		player.Message("Your magic ability is not high enough for this spell.")
		player.ResetPath()
		return true
	}
	if lvDelta < 10-import("math").Min(import("math").Max((player.MagicPoints()-5)/5, 0), 5) && rand(0, (lvDelta+2)*2) == 0 {
		player.PlaySound("spellfail")
		player.Message("The spell fails! You may try again in 20 seconds")
		player.ResetPath()
		return true
	}
	return false
}

func checkAndRemoveRunes(player, s) {
	for id, amt in s.runes {
		if player.Inventory.CountID(id) < amt {
			import("log").cheatf("%v casted spell with not enough runes\n", player)
			player.Message("You don't have all the reagents you need for this spell")
			return true
		}
	}
	for id, amt in s.runes {
		player.Inventory.RemoveByID(id, amt)
	}
	return false
}
