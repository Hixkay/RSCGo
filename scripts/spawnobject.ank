addCommand("object", func(player, args) {
	x = player.CurX()
	y = player.CurY()
	if getObjectAt(x, y) != nil {
		player.SendPacket(packets.ServerMessage("There is already an object here."))
		return
	}
	try {
		id = toInt(args[0])
		dir = North
		if len(args) > 1 {
			dir = parseDirection(args[1])
		}
		addObject(newObject(id, North, x, y, false))
		log.cmdf("'%v' spawned a new object{id:%v, dir:%v} at %v,%v", player.String(), id, dir, x, y)
	} catch e {
		player.SendPacket(packets.ServerMessage("Invalid syntax.  Usage: ::object <id> (<dir>)"))
	}
})
addCommand("boundary", func(player, args) {
	x = player.CurX()
	y = player.CurY()
	if getObjectAt(x, y) != nil {
		player.SendPacket(packets.ServerMessage("There is already an object here."))
		return
	}
	try {
		id = toInt(args[0])
		dir = North
		if len(args) > 1 {
			dir = parseDirection(args[1])
		}
		addObject(newObject(id, North, x, y, true))
		log.cmdf("'%v' spawned a new boundary{id:%v, dir:%v} at %v,%v", player.String(), id, dir, x, y)
	} catch e {
		player.SendPacket(packets.ServerMessage("Invalid syntax.  Usage: ::boundary <id> (<dir>)"))
	}
})