bind = import("bind")
time = import("time")

drainRates = [
	15,
	15,
	15,
	30,
	30,
	30,
	5,
	10,
	10,
	60,
	60,
	60,
	60,
	60
]

bind.onLogin(func(player) {
	percentDepleted = 0.0
	drainedTimes = {}
	
	drainTime = func(idx) {
		return 180000 / drainRates[idx] * (1 + player.PrayerPoints() / 30.0)
	}

	ranOut = func() {
		for idx in range(14) {
			player.PrayerOff(idx)
		}
		
		player.SendPrayers()
		player.Message("You have run out of prayer points. Return to a church to recharge")
		drainedTimes = {}
		percentDepleted = 0.0
	}

	drain = func() {
		player.IncCurStat(PRAYER, -1)
		
		if player.Skills().Current(PRAYER) <= 0 {
			ranOut()
			return true
		}

		return false
	}

	player.Tickables += func() {
		for index in range(14) {
			lastDrain, ok = drainedTimes[index]

			if ok {
				// prayer at index was on last tick
				if !player.PrayerActivated(index) {
					// but now it's off
					percentDepleted += time.Since(lastDrain).Milliseconds() / drainTime(index)
					delete(drainedTimes, index)
					if percentDepleted >= 1.0 {
						percentDepleted -= 1.0
						if drain() {
							return
						}
					}
					continue
				}
				if time.Since(lastDrain).Milliseconds() >= drainTime(index) {
					if drain() {
						return
					}
					drainedTimes[index] = time.Now()
				}
			} else {
				// prayer at index was off last tick
				if player.PrayerActivated(index) {
					// but now it's on
					drainedTimes[index] = time.Now().Add( -time.Millisecond * (percentDepleted*drainTime(index)) )
					println(percentDepleted, (percentDepleted*drainTime(index)) + "/" + drainTime(index), time.Since(drainedTimes[index]))
					percentDepleted = 0.0
				}
			}

		}
	}
})
