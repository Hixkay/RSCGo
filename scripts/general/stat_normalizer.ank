bind = import("bind")
math = import("math")
time = import("time")

bind.onLogin(func(player) {
	curTick = 0
	player.Tickables.Add(func() {
		curTick++
//		if time.Since(player.AttributeList.VarTime("deathTime")) <= time.Second*5 {
			// Hack to fix bug in client death screen that freezes client if no new player position packets arrive after
			// the timer runs out.  Timer for it is 250, and decreases at a rate of 50 per sec, e.g 5 secs
//			player.PostTickables.Add(func() {
//				player.SetSpriteUpdated()
//			})
//		}
		skillsTimer = player.PrayerActivated(PRAYER_RAPID_RESTORE) ? 50 : 100
		hitpointTimer = player.PrayerActivated(PRAYER_RAPID_HEAL) ? 50 : 100

		if curTick % skillsTimer == 0 {
			for i in range(THIEVING) {
				delta = player.Skills().DeltaMax(i)
				if i == HITPOINTS || i == PRAYER || delta == 0 {
					// Handled elsewhere
					continue
				}
				if math.Abs(delta) == 1 {
					player.Message("Your " + skillName(i) + " level has returned to normal")
				}
				player.IncCurStat(i, delta / math.Abs(delta))
			}
		}

		if curTick % hitpointTimer == 0 {
			delta = player.Skills().DeltaMax(HITPOINTS)
			if delta != 0 {
				player.IncCurStat(HITPOINTS, delta / math.Abs(delta))
			}
		}
	})
})
