bind = import("bind")
math = import("math")
time = import("time")

bind.onLogin(func(player) {
	normalize = func(idx, notify) {
		max = player.Skills().Maximum(idx)
		delta = player.Skills().Current(idx) - max
	
		if math.Abs(delta) != 0 {
			switch delta > 0 {
			case true:
				player.IncCurStat(idx, -1)
			case false:
				player.IncCurStat(idx, 1)
			}

			if notify && math.Abs(delta) == 1 {
				player.Message("Your " + skillName(idx) + " level has returned to normal")
			}
		}
	}
	curTick = 0
	player.Tickables += func() {
		curTick++
		if time.Since(player.Transients().VarTime("deathTime")) <= time.Second*5 {
			// Hack to fix bug in client death screen that freezes client if no new player position packets arrive after
			// the timer runs out.  Timer for it is 250, and decreases at a rate of 50 per sec, e.g 5 secs
			player.ResetTickables += func() {
				player.SetSpriteUpdated()
			}
		}
		skillTime = player.PrayerActivated(PRAYER_RAPID_RESTORE) ? 50 : 100
		hitsTime = player.PrayerActivated(PRAYER_RAPID_HEAL) ? 50 : 100
		if curTick % skillTime == 0 {
			for i = 0; i < 18; i++ {
				if i == HITPOINTS || i == PRAYER {
					// Handled elsewhere
					continue
				}
				normalize(i, true)
			}
		}
		if curTick % hitsTime == 0 {
			normalize(HITPOINTS, false)
		}
	}
})
